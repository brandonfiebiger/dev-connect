// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EmployerContainer
    addJob={[MockFunction]}
    addJobType={[MockFunction]}
    jobTypes={
      Array [
        Object {
          "average_salary": 85000,
          "id": 1,
          "job_title": "Application Architect",
        },
        Object {
          "average_salary": 75000,
          "id": 2,
          "job_title": "Software Engineer",
        },
      ]
    }
    jobs={
      Array [
        Object {
          "company": "DHI GROUP, INC.",
          "description": "A good job",
          "id": 121,
          "job_title_id": 1,
          "location": "GREATER DENVER AREA",
          "status": "none",
        },
        Object {
          "company": "TRAVELERS HAVEN",
          "description": "A good job",
          "id": 122,
          "job_title_id": 2,
          "location": "GREATER DENVER AREA",
          "status": "saved",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header>
          <h1>
            Employers
          </h1>
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="jobs-container-link"
            to="/"
          >
            Home
          </NavLink>
        </header>,
        <form
          className="employer-form"
          onSubmit={[Function]}
        >
          <div>
            <select
              className="job-title-select"
              name="jobTitle"
              onChange={[Function]}
            >
              <option>
                Please Select A Job Type
              </option>
              <option>
                Application Architect
              </option>
              <option>
                Software Engineer
              </option>
              <option>
                Add New Job Title +
              </option>
            </select>
          </div>
          <input
            className="employer-input"
            name="jobTitle"
            onChange={[Function]}
            placeholder="Job Title"
          />
          <input
            className="employer-input"
            name="company"
            onChange={[Function]}
            placeholder="Company Name"
          />
          <input
            className="employer-input"
            name="location"
            onChange={[Function]}
            placeholder="Location"
          />
          <input
            className="employer-input"
            name="salary"
            onChange={[Function]}
            placeholder="Salary"
            type="number"
          />
          <textarea
            className="employer-input description"
            name="description"
            onChange={[Function]}
            placeholder="Job Description"
          />
          <button
            className="add-job-button"
          >
            Add Job
          </button>
        </form>,
      ],
      "className": "employer-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
              Employers
            </h1>,
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="jobs-container-link"
              to="/"
            >
              Home
            </NavLink>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Employers",
            },
            "ref": null,
            "rendered": "Employers",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "aria-current": "page",
              "children": "Home",
              "className": "jobs-container-link",
              "to": "/",
            },
            "ref": null,
            "rendered": "Home",
            "type": [Function],
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              <select
                className="job-title-select"
                name="jobTitle"
                onChange={[Function]}
              >
                <option>
                  Please Select A Job Type
                </option>
                <option>
                  Application Architect
                </option>
                <option>
                  Software Engineer
                </option>
                <option>
                  Add New Job Title +
                </option>
              </select>
            </div>,
            <input
              className="employer-input"
              name="jobTitle"
              onChange={[Function]}
              placeholder="Job Title"
            />,
            <input
              className="employer-input"
              name="company"
              onChange={[Function]}
              placeholder="Company Name"
            />,
            <input
              className="employer-input"
              name="location"
              onChange={[Function]}
              placeholder="Location"
            />,
            <input
              className="employer-input"
              name="salary"
              onChange={[Function]}
              placeholder="Salary"
              type="number"
            />,
            <textarea
              className="employer-input description"
              name="description"
              onChange={[Function]}
              placeholder="Job Description"
            />,
            <button
              className="add-job-button"
            >
              Add Job
            </button>,
          ],
          "className": "employer-form",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <select
                className="job-title-select"
                name="jobTitle"
                onChange={[Function]}
              >
                <option>
                  Please Select A Job Type
                </option>
                <option>
                  Application Architect
                </option>
                <option>
                  Software Engineer
                </option>
                <option>
                  Add New Job Title +
                </option>
              </select>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option>
                    Please Select A Job Type
                  </option>,
                  Array [
                    <option>
                      Application Architect
                    </option>,
                    <option>
                      Software Engineer
                    </option>,
                  ],
                  <option>
                    Add New Job Title +
                  </option>,
                ],
                "className": "job-title-select",
                "name": "jobTitle",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Please Select A Job Type",
                  },
                  "ref": null,
                  "rendered": "Please Select A Job Type",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Application Architect",
                  },
                  "ref": null,
                  "rendered": "Application Architect",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Software Engineer",
                  },
                  "ref": null,
                  "rendered": "Software Engineer",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Add New Job Title +",
                  },
                  "ref": null,
                  "rendered": "Add New Job Title +",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "employer-input",
              "name": "jobTitle",
              "onChange": [Function],
              "placeholder": "Job Title",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "employer-input",
              "name": "company",
              "onChange": [Function],
              "placeholder": "Company Name",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "employer-input",
              "name": "location",
              "onChange": [Function],
              "placeholder": "Location",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "employer-input",
              "name": "salary",
              "onChange": [Function],
              "placeholder": "Salary",
              "type": "number",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "employer-input description",
              "name": "description",
              "onChange": [Function],
              "placeholder": "Job Description",
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Add Job",
              "className": "add-job-button",
            },
            "ref": null,
            "rendered": "Add Job",
            "type": "button",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header>
            <h1>
              Employers
            </h1>
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="jobs-container-link"
              to="/"
            >
              Home
            </NavLink>
          </header>,
          <form
            className="employer-form"
            onSubmit={[Function]}
          >
            <div>
              <select
                className="job-title-select"
                name="jobTitle"
                onChange={[Function]}
              >
                <option>
                  Please Select A Job Type
                </option>
                <option>
                  Application Architect
                </option>
                <option>
                  Software Engineer
                </option>
                <option>
                  Add New Job Title +
                </option>
              </select>
            </div>
            <input
              className="employer-input"
              name="jobTitle"
              onChange={[Function]}
              placeholder="Job Title"
            />
            <input
              className="employer-input"
              name="company"
              onChange={[Function]}
              placeholder="Company Name"
            />
            <input
              className="employer-input"
              name="location"
              onChange={[Function]}
              placeholder="Location"
            />
            <input
              className="employer-input"
              name="salary"
              onChange={[Function]}
              placeholder="Salary"
              type="number"
            />
            <textarea
              className="employer-input description"
              name="description"
              onChange={[Function]}
              placeholder="Job Description"
            />
            <button
              className="add-job-button"
            >
              Add Job
            </button>
          </form>,
        ],
        "className": "employer-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1>
                Employers
              </h1>,
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="jobs-container-link"
                to="/"
              >
                Home
              </NavLink>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Employers",
              },
              "ref": null,
              "rendered": "Employers",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": "Home",
                "className": "jobs-container-link",
                "to": "/",
              },
              "ref": null,
              "rendered": "Home",
              "type": [Function],
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                <select
                  className="job-title-select"
                  name="jobTitle"
                  onChange={[Function]}
                >
                  <option>
                    Please Select A Job Type
                  </option>
                  <option>
                    Application Architect
                  </option>
                  <option>
                    Software Engineer
                  </option>
                  <option>
                    Add New Job Title +
                  </option>
                </select>
              </div>,
              <input
                className="employer-input"
                name="jobTitle"
                onChange={[Function]}
                placeholder="Job Title"
              />,
              <input
                className="employer-input"
                name="company"
                onChange={[Function]}
                placeholder="Company Name"
              />,
              <input
                className="employer-input"
                name="location"
                onChange={[Function]}
                placeholder="Location"
              />,
              <input
                className="employer-input"
                name="salary"
                onChange={[Function]}
                placeholder="Salary"
                type="number"
              />,
              <textarea
                className="employer-input description"
                name="description"
                onChange={[Function]}
                placeholder="Job Description"
              />,
              <button
                className="add-job-button"
              >
                Add Job
              </button>,
            ],
            "className": "employer-form",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <select
                  className="job-title-select"
                  name="jobTitle"
                  onChange={[Function]}
                >
                  <option>
                    Please Select A Job Type
                  </option>
                  <option>
                    Application Architect
                  </option>
                  <option>
                    Software Engineer
                  </option>
                  <option>
                    Add New Job Title +
                  </option>
                </select>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option>
                      Please Select A Job Type
                    </option>,
                    Array [
                      <option>
                        Application Architect
                      </option>,
                      <option>
                        Software Engineer
                      </option>,
                    ],
                    <option>
                      Add New Job Title +
                    </option>,
                  ],
                  "className": "job-title-select",
                  "name": "jobTitle",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Please Select A Job Type",
                    },
                    "ref": null,
                    "rendered": "Please Select A Job Type",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Application Architect",
                    },
                    "ref": null,
                    "rendered": "Application Architect",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Software Engineer",
                    },
                    "ref": null,
                    "rendered": "Software Engineer",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Add New Job Title +",
                    },
                    "ref": null,
                    "rendered": "Add New Job Title +",
                    "type": "option",
                  },
                ],
                "type": "select",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "employer-input",
                "name": "jobTitle",
                "onChange": [Function],
                "placeholder": "Job Title",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "employer-input",
                "name": "company",
                "onChange": [Function],
                "placeholder": "Company Name",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "employer-input",
                "name": "location",
                "onChange": [Function],
                "placeholder": "Location",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "employer-input",
                "name": "salary",
                "onChange": [Function],
                "placeholder": "Salary",
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "employer-input description",
                "name": "description",
                "onChange": [Function],
                "placeholder": "Job Description",
              },
              "ref": null,
              "rendered": null,
              "type": "textarea",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add Job",
                "className": "add-job-button",
              },
              "ref": null,
              "rendered": "Add Job",
              "type": "button",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`EmployerContainer should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EmployerContainer
    addJob={[MockFunction]}
    addJobType={[MockFunction]}
    jobTypes={
      Array [
        Object {
          "average_salary": 85000,
          "id": 1,
          "job_title": "Application Architect",
        },
        Object {
          "average_salary": 75000,
          "id": 2,
          "job_title": "Software Engineer",
        },
      ]
    }
    jobs={
      Array [
        Object {
          "company": "DHI GROUP, INC.",
          "description": "A good job",
          "id": 121,
          "job_title_id": 1,
          "location": "GREATER DENVER AREA",
          "status": "none",
        },
        Object {
          "company": "TRAVELERS HAVEN",
          "description": "A good job",
          "id": 122,
          "job_title_id": 2,
          "location": "GREATER DENVER AREA",
          "status": "saved",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header>
          <h1>
            Employers
          </h1>
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="jobs-container-link"
            to="/"
          >
            Home
          </NavLink>
        </header>,
        <form
          className="employer-form"
          onSubmit={[Function]}
        >
          <div>
            <select
              className="job-title-select"
              name="jobTitle"
              onChange={[Function]}
            >
              <option>
                Please Select A Job Type
              </option>
              <option>
                Application Architect
              </option>
              <option>
                Software Engineer
              </option>
              <option>
                Add New Job Title +
              </option>
            </select>
          </div>
          <input
            className="employer-input"
            name="jobTitle"
            onChange={[Function]}
            placeholder="Job Title"
          />
          <input
            className="employer-input"
            name="company"
            onChange={[Function]}
            placeholder="Company Name"
          />
          <input
            className="employer-input"
            name="location"
            onChange={[Function]}
            placeholder="Location"
          />
          <input
            className="employer-input"
            name="salary"
            onChange={[Function]}
            placeholder="Salary"
            type="number"
          />
          <textarea
            className="employer-input description"
            name="description"
            onChange={[Function]}
            placeholder="Job Description"
          />
          <button
            className="add-job-button"
          >
            Add Job
          </button>
        </form>,
      ],
      "className": "employer-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
              Employers
            </h1>,
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="jobs-container-link"
              to="/"
            >
              Home
            </NavLink>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Employers",
            },
            "ref": null,
            "rendered": "Employers",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "aria-current": "page",
              "children": "Home",
              "className": "jobs-container-link",
              "to": "/",
            },
            "ref": null,
            "rendered": "Home",
            "type": [Function],
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              <select
                className="job-title-select"
                name="jobTitle"
                onChange={[Function]}
              >
                <option>
                  Please Select A Job Type
                </option>
                <option>
                  Application Architect
                </option>
                <option>
                  Software Engineer
                </option>
                <option>
                  Add New Job Title +
                </option>
              </select>
            </div>,
            <input
              className="employer-input"
              name="jobTitle"
              onChange={[Function]}
              placeholder="Job Title"
            />,
            <input
              className="employer-input"
              name="company"
              onChange={[Function]}
              placeholder="Company Name"
            />,
            <input
              className="employer-input"
              name="location"
              onChange={[Function]}
              placeholder="Location"
            />,
            <input
              className="employer-input"
              name="salary"
              onChange={[Function]}
              placeholder="Salary"
              type="number"
            />,
            <textarea
              className="employer-input description"
              name="description"
              onChange={[Function]}
              placeholder="Job Description"
            />,
            <button
              className="add-job-button"
            >
              Add Job
            </button>,
          ],
          "className": "employer-form",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <select
                className="job-title-select"
                name="jobTitle"
                onChange={[Function]}
              >
                <option>
                  Please Select A Job Type
                </option>
                <option>
                  Application Architect
                </option>
                <option>
                  Software Engineer
                </option>
                <option>
                  Add New Job Title +
                </option>
              </select>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option>
                    Please Select A Job Type
                  </option>,
                  Array [
                    <option>
                      Application Architect
                    </option>,
                    <option>
                      Software Engineer
                    </option>,
                  ],
                  <option>
                    Add New Job Title +
                  </option>,
                ],
                "className": "job-title-select",
                "name": "jobTitle",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Please Select A Job Type",
                  },
                  "ref": null,
                  "rendered": "Please Select A Job Type",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Application Architect",
                  },
                  "ref": null,
                  "rendered": "Application Architect",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Software Engineer",
                  },
                  "ref": null,
                  "rendered": "Software Engineer",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Add New Job Title +",
                  },
                  "ref": null,
                  "rendered": "Add New Job Title +",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "employer-input",
              "name": "jobTitle",
              "onChange": [Function],
              "placeholder": "Job Title",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "employer-input",
              "name": "company",
              "onChange": [Function],
              "placeholder": "Company Name",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "employer-input",
              "name": "location",
              "onChange": [Function],
              "placeholder": "Location",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "employer-input",
              "name": "salary",
              "onChange": [Function],
              "placeholder": "Salary",
              "type": "number",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "employer-input description",
              "name": "description",
              "onChange": [Function],
              "placeholder": "Job Description",
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Add Job",
              "className": "add-job-button",
            },
            "ref": null,
            "rendered": "Add Job",
            "type": "button",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header>
            <h1>
              Employers
            </h1>
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="jobs-container-link"
              to="/"
            >
              Home
            </NavLink>
          </header>,
          <form
            className="employer-form"
            onSubmit={[Function]}
          >
            <div>
              <select
                className="job-title-select"
                name="jobTitle"
                onChange={[Function]}
              >
                <option>
                  Please Select A Job Type
                </option>
                <option>
                  Application Architect
                </option>
                <option>
                  Software Engineer
                </option>
                <option>
                  Add New Job Title +
                </option>
              </select>
            </div>
            <input
              className="employer-input"
              name="jobTitle"
              onChange={[Function]}
              placeholder="Job Title"
            />
            <input
              className="employer-input"
              name="company"
              onChange={[Function]}
              placeholder="Company Name"
            />
            <input
              className="employer-input"
              name="location"
              onChange={[Function]}
              placeholder="Location"
            />
            <input
              className="employer-input"
              name="salary"
              onChange={[Function]}
              placeholder="Salary"
              type="number"
            />
            <textarea
              className="employer-input description"
              name="description"
              onChange={[Function]}
              placeholder="Job Description"
            />
            <button
              className="add-job-button"
            >
              Add Job
            </button>
          </form>,
        ],
        "className": "employer-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1>
                Employers
              </h1>,
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="jobs-container-link"
                to="/"
              >
                Home
              </NavLink>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Employers",
              },
              "ref": null,
              "rendered": "Employers",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": "Home",
                "className": "jobs-container-link",
                "to": "/",
              },
              "ref": null,
              "rendered": "Home",
              "type": [Function],
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                <select
                  className="job-title-select"
                  name="jobTitle"
                  onChange={[Function]}
                >
                  <option>
                    Please Select A Job Type
                  </option>
                  <option>
                    Application Architect
                  </option>
                  <option>
                    Software Engineer
                  </option>
                  <option>
                    Add New Job Title +
                  </option>
                </select>
              </div>,
              <input
                className="employer-input"
                name="jobTitle"
                onChange={[Function]}
                placeholder="Job Title"
              />,
              <input
                className="employer-input"
                name="company"
                onChange={[Function]}
                placeholder="Company Name"
              />,
              <input
                className="employer-input"
                name="location"
                onChange={[Function]}
                placeholder="Location"
              />,
              <input
                className="employer-input"
                name="salary"
                onChange={[Function]}
                placeholder="Salary"
                type="number"
              />,
              <textarea
                className="employer-input description"
                name="description"
                onChange={[Function]}
                placeholder="Job Description"
              />,
              <button
                className="add-job-button"
              >
                Add Job
              </button>,
            ],
            "className": "employer-form",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <select
                  className="job-title-select"
                  name="jobTitle"
                  onChange={[Function]}
                >
                  <option>
                    Please Select A Job Type
                  </option>
                  <option>
                    Application Architect
                  </option>
                  <option>
                    Software Engineer
                  </option>
                  <option>
                    Add New Job Title +
                  </option>
                </select>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option>
                      Please Select A Job Type
                    </option>,
                    Array [
                      <option>
                        Application Architect
                      </option>,
                      <option>
                        Software Engineer
                      </option>,
                    ],
                    <option>
                      Add New Job Title +
                    </option>,
                  ],
                  "className": "job-title-select",
                  "name": "jobTitle",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Please Select A Job Type",
                    },
                    "ref": null,
                    "rendered": "Please Select A Job Type",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Application Architect",
                    },
                    "ref": null,
                    "rendered": "Application Architect",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Software Engineer",
                    },
                    "ref": null,
                    "rendered": "Software Engineer",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Add New Job Title +",
                    },
                    "ref": null,
                    "rendered": "Add New Job Title +",
                    "type": "option",
                  },
                ],
                "type": "select",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "employer-input",
                "name": "jobTitle",
                "onChange": [Function],
                "placeholder": "Job Title",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "employer-input",
                "name": "company",
                "onChange": [Function],
                "placeholder": "Company Name",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "employer-input",
                "name": "location",
                "onChange": [Function],
                "placeholder": "Location",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "employer-input",
                "name": "salary",
                "onChange": [Function],
                "placeholder": "Salary",
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "employer-input description",
                "name": "description",
                "onChange": [Function],
                "placeholder": "Job Description",
              },
              "ref": null,
              "rendered": null,
              "type": "textarea",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add Job",
                "className": "add-job-button",
              },
              "ref": null,
              "rendered": "Add Job",
              "type": "button",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
